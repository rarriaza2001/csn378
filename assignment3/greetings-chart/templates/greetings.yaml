apiVersion: apps/v1
kind: Deployment
metadata:
  name: greetings
spec:
  # Set replicas; Requirement 2.2
  replicas: ""
  selector:
    matchLabels:
      app: greetings
  template:
    metadata:
      labels:
        app: greetings
    spec:
      serviceAccount: greetings
      containers:
        - name: assignment3 
          image: {{ .Values.IMAGE }}
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: greetings-config
              mountPath: /hostfolder
          ports:
            - containerPort: 5001
          env:
          - name: GREETING
            value: ""     # Requirement 2.3
          - name: ""      # Requirement 2.4
            value: ""     # Requirement 2.5
      volumes:
        - name: greetings-config
          configMap:
            name: greetings-config
---
kind: Service
apiVersion: v1
metadata:
  name: greetings
  labels:
    app: greetings
spec:
  selector:
    app: greetings
  ports:
  - protocol: TCP
    port: 80
    targetPort: 5001
    nodePort: # Requirement 2.6
  type: NodePort
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: greetings-config
  labels:
    app: greetings
data:
  filenames.txt: |
    application.py
    Dockerfile
    run.sh
    build.sh
    requirements.txt
    greetings.yaml
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: greetings
  labels:
    app: greetings
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: greetings-reader-role
  labels:
    app: greetings
rules:
- apiGroups: [""]
  resources: ["pods","configmaps","serviceaccounts"]
  verbs: ["get", "list"]
# Requirement 2.7
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: greetings-reader-rolebinding
  labels:
    app: greetings
subjects:
- kind: ServiceAccount
  name: greetings
  namespace: "" # Requirement 2.8
roleRef:
  kind: Role
  name: greetings-reader-role
  apiGroup: rbac.authorization.k8s.io 
